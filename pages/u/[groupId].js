import React, { useState } from 'react'
import Head from 'next/head'
import nookies from "nookies";

import { useRouter } from "next/router";
import { useDispatch, useSelector } from 'react-redux'

import Layout from "../../components/common/Layout";
import AutherProfile from '../../components/calendar/AutherProfile'
import CustomFullCalendar from '../../components/calendar/CustomFullCalendar'
import Fab from '../../components/common/Fab'
import NewEventModal from '../../components/event/NewEventModal'
import ScheduleDetailModal from '../../components/schedule/ScheduleDetailModal'
import API from "../../api";
import U from "../../utile";

export const getServerSideProps = async (ctx) => {
    return U.verifyAuthState({ ctx });
};

const CalendarScreen = props => {
    const {
        isSignOut = false,
        group = {},
        profile = {}
    } = props;

    const dispatch = useDispatch()
    const router = useRouter()
    const [label, setLabel] = React.useState()
    const [calendarData, setCalendarData] = React.useState({})

    const [isActiveEventModal, setIsActiveEventModal] = React.useState(false)
    const [isActiveScheduleDetailModal, setIsActiveScheduleDetailModal] = React.useState(false)
    const scheduleKeys = Object.keys(calendarData.schedule ?? {});

    const { groupId } = router.query;

    const _handleEventModal = () => {
        if (isActiveEventModal) {
            setIsActiveEventModal(false)
        } else {
            setIsActiveEventModal(true)
        }
    }

    const _handleScheduleModal = ({
        label
    }) => {
        if (isActiveScheduleDetailModal) {
            setLabel("")
            setIsActiveScheduleDetailModal(false)
        } else {
            setLabel(label)
            setIsActiveScheduleDetailModal(true)
        }
    }

    React.useLayoutEffect(() => {
        const asyncFunc = async () => {
            const _calendarData = await API.getCurrentMonthScheduleDispatchs({ dispatch, groupId })
        }
        asyncFunc()
    }, [])

    return React.useMemo(() => {
        return (
            <Layout
                page={"/calendar"}
                isSignOut={isSignOut}
                group={group}
                profile={profile}
            >
                <Head>
                    <title>Create Next App</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>
                <AutherProfile groupId={groupId} />
                <CustomFullCalendar groupId={groupId} onClickTileContent={_handleScheduleModal} />
                <Fab onClick={_handleEventModal} />
                <NewEventModal groupId={groupId} isActive={isActiveEventModal} onCloseModal={_handleEventModal} />
                <ScheduleDetailModal label={label} isActive={isActiveScheduleDetailModal} onCloseModal={_handleScheduleModal} />
            </Layout>
        )
    }, [groupId, isSignOut, isActiveEventModal, isActiveScheduleDetailModal])
}

export default CalendarScreen