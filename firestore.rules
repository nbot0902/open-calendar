rules_version = '2';
service cloud.firestore {
  
  match /databases/{database}/documents {    
    function isAuthed(_userId) {
      return request.auth.uid != null;
    }
    function isMe(_userId) {
      return request.auth.uid == _userId;
    }

    // support/application
  	match /support/application {
    	allow create : if false;
      allow read : if true;
      allow update : if false;
      allow delete: if false;
    }
    
    match /calendars/{groupId}  {
    	allow create : if isAuthed(request.auth.uid);
      allow read :if true;
      allow update : if isAuthed(request.auth.uid);
      allow delete: if false;
      
      match /groupCalendars/{calendarId} {
        allow create : if isAuthed(request.auth.uid);
        allow read :if true;
        allow update : if isAuthed(request.auth.uid);
        allow delete: if false;
        
       	match /calendarSchedules/{scheduleId} {
        	allow create : if isAuthed(request.auth.uid);
        	allow read : if true;
        	allow update : if isAuthed(request.auth.uid);
        	allow delete: if false;
      	}
      }
    }
    
  	match /schedules/{groupId}  {
    	allow create : if isAuthed(request.auth.uid);
      allow read :if true;
      allow update : if isAuthed(request.auth.uid);
      allow delete: if false;
      
      match /groupSchedules/{scheduleId} {
        allow create : if isAuthed(request.auth.uid);
        allow read :if true;
        allow update : if isAuthed(request.auth.uid);
        allow delete: if false;
        
       	match /schedulesEvents/{eventId} {
        	allow create : if isAuthed(request.auth.uid);
        	allow read : if true;
        	allow update : if isAuthed(request.auth.uid);
        	allow delete: if false;
      	}
      }
    }
    
    // groups
    match /groups/{groupId} {
      allow create : if isAuthed(request.auth.uid);
      allow read : if true;
      allow update : if isAuthed(request.auth.uid);
      allow delete : if false;
    }
    
    // users
    match /users/{userId} {
      allow create : if isAuthed(request.auth.uid) && isMe(userId);
      allow read : if true;
      allow update : if isAuthed(request.auth.uid) && isMe(userId);
      allow delete: if false;

      match /userGroups/{groupsId} {
        allow create : if isAuthed(request.auth.uid) && isMe(userId);
        allow read : if true;
        allow update : if isAuthed(request.auth.uid) && isMe(userId);
        allow delete: if false;
      }
    }
    
    // events
    match /events/{eventId} {
      allow create : if isAuthed(request.auth.uid);
      allow read : if true;
      allow update : if isAuthed(request.auth.uid);
      allow delete: if false;
    }
  
  }
}
